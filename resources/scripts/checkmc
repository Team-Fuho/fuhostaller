#!/bin/bash

# Default variables
java=false
bedrock=false

osdir(){
	if [[ ! -z "$2" ]]; then
		javaFolder="$2"
		bedrockFolder="$2"
		return
	fi

	case "$1" in
		"Darwin")
			javaFolder=~/"Library/Application Support/minecraft"
			bedrockFolder=~/"Library/Application Support/mcpelauncher/games/com.mojang"
			;;
		*)
			javaFolder=~/".minecraft"
			bedrockFolder=~/".var/app/io.mrarm.mcpelauncher/data/mcpelauncher/games/com.mojang"
			[[ ! -d "${bedrockFolder}" ]] && bedrockFolder=~/".local/share/mcpelauncher/games/com.mojang"
			;;
	esac
}

mmcFind(){
	# array of possible locations using find command
	declare dir
	dir=("$(find "${1}" -type d \( -iname "multimc" -o -iname "ultimmc" -o -iname "polymc" \) 2>/dev/null)")
	for d in "${dir[@]}"; do
		filepath="$(find "$1" -type f \( -iname "multimc.cfg" -o -iname "ultimmc.cfg" -o -iname "polymc.cfg" \)  2>/dev/null | sed -E 's|/[^/]+$||' | head -1)"
		[[ -z "${filepath}" ]] && continue
		echo "${filepath}"
	done
	# [[ ! -z "${dir}" ]] && echo "$(find "${dir1}" -type f \( -iname "multimc.cfg" -o -iname "ultimmc.cfg" -o -iname "polymc.cfg" \)  2>/dev/null | sed -E 's|/[^/]+$||' | head -1)"

	# echo "$(find "$1" \( -iname "multimc.cfg" -o -iname "ultimmc.cfg" -o -iname "polymc.cfg" \)  2>/dev/null | sed -E 's|/[^/]+$||' | sort -u | head -1)"
}

mmc(){
	# array of possible multimc.cfg paths
	declare -a paths
	case "$1" in
		"Darwin")
			paths=( "/Applications" ~/"Library/Application Support" ~/"Downloads" ~ )
			;;
		*)
			paths=( ~/"Downloads" ~/".local/share" ~ )
			;;
	esac
	for path in "${paths[@]}"; do
		multimc="$(mmcFind "${path}")"
		[[ ! -z "${multimc}" ]] && break
	done
	javaFolder="${multimc}"
	dircheck "$1"
}

bedfind(){
	beddir="$(find ~ -type d -iname "com.mojang" 2>/dev/null | sort -u | head -1)"
	if [[ ! -z "${beddir}" ]]; then
		bedrock=true
		bedrockFolder="${beddir}"
		bedrockWorlds="${bedrockFolder}/minecraftWorlds"
	else
		bedrockFolder=""
	fi
}

dircheck(){
	[[ -z "${javaFolder}" ]] && return
	[[ -z "${bedrockFolder}" ]] && return
	if [[ -d "${javaFolder}" ]]; then
		if [[ -d "${javaFolder}/home" ]]; then
			JLauncher="tl"
			dir="$(ls -d "${javaFolder}"/home/*1.14* 2>/dev/null | head -1)"
			[[ ! -z "${dir}" ]] && javaWorlds="${dir}/saves" || javaWorlds="${javaFolder}/home/1.14/saves"
			mkdir -p "${javaWorlds}"
		elif [[ -d "${javaFolder}/instances" ]];then
			JLauncher="multimc"
			dir="$(ls -d "${javaFolder}"/instances/*1.14.4* 2>/dev/null | head -1)"
			[[ ! -z "${dir}" ]] && javaWorlds="${dir}/saves" || javaWorlds="${javaFolder}/instances/1.14.4/.minecraft/saves"
			mkdir -p "${javaWorlds}"
		else
			JLauncher="default"
			javaWorlds="${javaFolder}/saves"
		fi

		if [[ -d "${javaWorlds}" ]];then
			java=true 
		else
			javaWorlds=""
			[[ -z "$2" ]] && mmc "$1"
		fi
		
	elif [[ -z "$2" ]]; then
		mmc "$1"
	else
		javaFolder=""
	fi

	if [[ -d "${bedrockFolder}" ]]; then
		bedrockWorlds="${bedrockFolder}/minecraftWorlds"
		if [[ -d "${bedrockWorlds}" ]]; then
			bedrock=true
		else
			bedrockWorlds=""
			[[ -z "$2" ]] && bedfind
		fi
	elif [[ -z "$2" ]]; then
		bedfind
	else
		bedrockFolder=""
	fi
}

osdir "$@"
dircheck "$@"

echo "{\"java\":${java},\"bedrock\":${bedrock},\"javaFolder\":\"${javaFolder}\",\"bedrockFolder\":\"${bedrockFolder}\",\"javaWorlds\":\"${javaWorlds}\",\"bedrockWorlds\":\"${bedrockWorlds}\",\"JLauncher\":\"${JLauncher}\"}"
